{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/angelavuong/Senior/Capstone/shelter-in-pets/client/screens/login.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { loginAuth as _loginAuth } from \"../store/user\";\nimport { connect } from 'react-redux';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"handleChange\",\n    value: function handleChange(name, value) {\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n\n      if (email === '') {\n        alert('Email is required');\n      } else if (password === '') {\n        alert('Password is required');\n      } else {\n        this.props.loginAuth(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n\n        if (this.props.error) {\n          alert('Invalid user credentials');\n        } else {\n          this.props.navigation.navigate('isLoggedIn');\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, React.createElement(View, {\n        style: styles.formWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, React.createElement(Text, {\n        style: styles.welcomeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, \"Welcome back!\"), React.createElement(View, {\n        style: styles.formRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Enter email address\",\n        placeholderTextColor: \"#333\",\n        value: email,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleChange('email', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      })), React.createElement(View, {\n        style: styles.formRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Enter password\",\n        placeholderTextColor: \"#333\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleChange('password', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: function onPress() {\n          return _this2.handleLogin();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, \"Login\")), React.createElement(Button, {\n        title: \"Not a user?\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('signup');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      })));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    error: state.user.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginAuth: function loginAuth(email, password) {\n      dispatch(_loginAuth(email, password));\n    }\n  };\n};\n\nvar Login = connect(mapStateToProps, mapDispatchToProps)(LoginScreen);\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formWrapper: {\n    width: '80%'\n  },\n  formRow: {\n    marginBottom: 10\n  },\n  textInput: {\n    backgroundColor: '#ddd',\n    height: 40,\n    paddingHorizontal: 10,\n    color: '#333'\n  },\n  welcomeText: {\n    textAlign: 'center',\n    marginBottom: 30,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  loginButton: {\n    backgroundColor: 'blue',\n    paddingVertical: 10\n  },\n  loginText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/angelavuong/Senior/Capstone/shelter-in-pets/client/screens/login.js"],"names":["React","loginAuth","connect","LoginScreen","state","email","password","handleChange","bind","handleLogin","name","value","setState","alert","props","error","navigation","navigate","styles","container","formWrapper","welcomeText","formRow","textInput","loginButton","loginText","Component","mapStateToProps","user","mapDispatchToProps","dispatch","Login","StyleSheet","create","height","alignItems","justifyContent","width","marginBottom","backgroundColor","paddingHorizontal","color","textAlign","fontSize","fontWeight","paddingVertical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Button,\n} from 'react-native';\nimport { loginAuth } from '../store/user';\nimport { connect } from 'react-redux';\n\nclass LoginScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleChange(name, value) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleLogin() {\n    const { email, password } = this.state;\n\n    if (email === '') {\n      alert('Email is required');\n    } else if (password === '') {\n      alert('Password is required');\n    } else {\n      this.props.loginAuth(email, password);\n      this.setState({\n        email: '',\n        password: '',\n      });\n      if (this.props.error) {\n        alert('Invalid user credentials');\n      } else {\n        this.props.navigation.navigate('isLoggedIn');\n      }\n    }\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <View style={styles.container}>\n        <View style={styles.formWrapper}>\n          <Text style={styles.welcomeText}>Welcome back!</Text>\n          <View style={styles.formRow}>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Enter email address\"\n              placeholderTextColor=\"#333\"\n              value={email}\n              onChangeText={value => this.handleChange('email', value)}\n            />\n          </View>\n          <View style={styles.formRow}>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Enter password\"\n              placeholderTextColor=\"#333\"\n              secureTextEntry={true}\n              value={password}\n              onChangeText={value => this.handleChange('password', value)}\n            />\n          </View>\n          <TouchableOpacity\n            style={styles.loginButton}\n            onPress={() => this.handleLogin()}\n          >\n            <Text style={styles.loginText}>Login</Text>\n          </TouchableOpacity>\n          <Button\n            title=\"Not a user?\"\n            onPress={() => this.props.navigation.navigate('signup')}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.user.error,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginAuth: (email, password) => {\n      dispatch(loginAuth(email, password));\n    },\n  };\n};\n\nconst Login = connect(mapStateToProps, mapDispatchToProps)(LoginScreen);\nexport default Login;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  formWrapper: {\n    width: '80%',\n  },\n  formRow: {\n    marginBottom: 10,\n  },\n  textInput: {\n    backgroundColor: '#ddd',\n    height: 40,\n    paddingHorizontal: 10,\n    color: '#333',\n  },\n  welcomeText: {\n    textAlign: 'center',\n    marginBottom: 30,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  loginButton: {\n    backgroundColor: 'blue',\n    paddingVertical: 10,\n  },\n  loginText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}