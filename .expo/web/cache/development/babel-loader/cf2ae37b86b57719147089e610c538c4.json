{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nvar GET_ALL_DOGS = 'GET_ALL_DOGS';\n\nvar gotAllDogs = function gotAllDogs(allDogs) {\n  return {\n    type: GET_ALL_DOGS,\n    allDogs: allDogs\n  };\n};\n\nvar initalState = {\n  allDogs: [],\n  selectedDog: {}\n};\nexport var getAllDogs = function getAllDogs() {\n  return function _callee(dispatch) {\n    var _ref, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get('http://localhost:3000/api/dogs'));\n\n          case 3:\n            _ref = _context.sent;\n            data = _ref.data;\n            dispatch(gotAllDogs(data));\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\n\nvar dogs = function dogs() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_DOGS:\n      return _objectSpread({}, state, {\n        allDogs: action.allDogs\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dogs;","map":{"version":3,"sources":["/Users/angelavuong/Senior/Capstone/shelter-in-pets/client/store/allDogs.js"],"names":["axios","GET_ALL_DOGS","gotAllDogs","allDogs","type","initalState","selectedDog","getAllDogs","dispatch","get","data","console","error","dogs","state","action"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAMC,YAAY,GAAG,cAArB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO;AAAA,SAAK;AAAEC,IAAAA,IAAI,EAAEH,YAAR;AAAsBE,IAAAA,OAAO,EAAPA;AAAtB,GAAL;AAAA,CAA1B;;AAGA,IAAME,WAAW,GAAG;AAClBF,EAAAA,OAAO,EAAE,EADS;AAElBG,EAAAA,WAAW,EAAE;AAFK,CAApB;AAMA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,SAAO,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoBR,KAAK,CAACS,GAAN,CAErB,gCAFqB,CAFpB;;AAAA;AAAA;AAEKC,YAAAA,IAFL,QAEKA,IAFL;AAMHF,YAAAA,QAAQ,CAACN,UAAU,CAACQ,IAAD,CAAX,CAAR;AANG;AAAA;;AAAA;AAAA;AAAA;AAQHC,YAAAA,OAAO,CAACC,KAAR;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAWD,CAZM;;AAkBP,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBT,WAAwB;AAAA,MAAXU,MAAW;;AAC5C,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKH,YAAL;AACE,+BAAYa,KAAZ;AAAmBX,QAAAA,OAAO,EAAEY,MAAM,CAACZ;AAAnC;;AACF;AACE,aAAOW,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeD,IAAf","sourcesContent":["import axios from 'axios';\n\n// action type\nconst GET_ALL_DOGS = 'GET_ALL_DOGS';\n\n// action creator\nconst gotAllDogs = allDogs => ({ type: GET_ALL_DOGS, allDogs });\n\n// inital state\nconst initalState = {\n  allDogs: [],\n  selectedDog: {},\n};\n\n// action thunk\nexport const getAllDogs = () => {\n  return async dispatch => {\n    try {\n      const { data } = await axios.get(\n        // 'https://shelter-in-pets-server.herokuapp.com/api/dogs'\n        'http://localhost:3000/api/dogs'\n      );\n      dispatch(gotAllDogs(data));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\n// action thunk for single dog\n// export const\n\n// Reducer\nconst dogs = (state = initalState, action) => {\n  switch (action.type) {\n    case GET_ALL_DOGS:\n      return { ...state, allDogs: action.allDogs };\n    default:\n      return state;\n  }\n};\n\nexport default dogs;\n"]},"metadata":{},"sourceType":"module"}