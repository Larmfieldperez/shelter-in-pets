{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/angelavuong/Senior/Capstone/shelter-in-pets/client/screens/signup.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from 'react-redux';\nimport { signupAuth as _signupAuth } from \"../store/user\";\n\nvar SignupScreen = function (_React$Component) {\n  _inherits(SignupScreen, _React$Component);\n\n  function SignupScreen() {\n    var _this;\n\n    _classCallCheck(this, SignupScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignupScreen).call(this));\n    _this.state = {\n      email: '',\n      password: '',\n      zipcode: '',\n      error: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSignup = _this.handleSignup.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SignupScreen, [{\n    key: \"handleChange\",\n    value: function handleChange(name, value) {\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSignup\",\n    value: function handleSignup() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          zipcode = _this$state.zipcode;\n\n      if (email === '') {\n        alert('Email is required');\n      } else if (password === '') {\n        alert('Password is required');\n      } else {\n        this.props.signupAuth(email, password, zipcode);\n        this.setState({\n          email: '',\n          password: '',\n          zipcode: ''\n        });\n\n        if (this.props.error) {\n          alert('User already exists');\n        } else {\n          this.props.navigation.navigate('isLoggedIn');\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          zipcode = _this$state2.zipcode;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, React.createElement(View, {\n        style: styles.formWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }, React.createElement(View, {\n        style: styles.formRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Enter email address\",\n        placeholderTextColor: \"#333\",\n        value: email,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleChange('email', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      })), React.createElement(View, {\n        style: styles.formRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Enter password\",\n        placeholderTextColor: \"#333\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleChange('password', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      })), React.createElement(View, {\n        style: styles.formRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Enter zipcode\",\n        placeholderTextColor: \"#333\",\n        value: zipcode,\n        onChangeText: function onChangeText(value) {\n          return _this2.handleChange('zipcode', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.signupButton,\n        onPress: function onPress() {\n          return _this2.handleSignup();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, React.createElement(Text, {\n        style: styles.signupText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }, \"Signup\")), React.createElement(Button, {\n        title: \"Already a user?\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('login');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      })));\n    }\n  }]);\n\n  return SignupScreen;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    error: state.user.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signupAuth: function signupAuth(email, password, zipcode) {\n      dispatch(_signupAuth(email, password, zipcode));\n    }\n  };\n};\n\nvar Signup = connect(mapStateToProps, mapDispatchToProps)(SignupScreen);\nexport default Signup;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formWrapper: {\n    width: '80%'\n  },\n  formRow: {\n    marginBottom: 10\n  },\n  textInput: {\n    backgroundColor: '#ddd',\n    height: 40,\n    paddingHorizontal: 10,\n    color: '#333'\n  },\n  signupButton: {\n    backgroundColor: 'blue',\n    paddingVertical: 10\n  },\n  signupText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/angelavuong/Senior/Capstone/shelter-in-pets/client/screens/signup.js"],"names":["React","connect","signupAuth","SignupScreen","state","email","password","zipcode","error","handleChange","bind","handleSignup","name","value","setState","alert","props","navigation","navigate","styles","container","formWrapper","formRow","textInput","signupButton","signupText","Component","mapStateToProps","user","mapDispatchToProps","dispatch","Signup","StyleSheet","create","height","alignItems","justifyContent","width","marginBottom","backgroundColor","paddingHorizontal","color","paddingVertical","textAlign","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Button,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport { signupAuth } from '../store/user';\n\nclass SignupScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      zipcode: '',\n      error: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n  }\n\n  handleChange(name, value) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSignup() {\n    const { email, password, zipcode } = this.state;\n    if (email === '') {\n      alert('Email is required');\n    } else if (password === '') {\n      alert('Password is required');\n    } else {\n      this.props.signupAuth(email, password, zipcode);\n      this.setState({\n        email: '',\n        password: '',\n        zipcode: '',\n      });\n      if (this.props.error) {\n        alert('User already exists');\n      } else {\n        this.props.navigation.navigate('isLoggedIn');\n      }\n    }\n  }\n\n  render() {\n    const { email, password, zipcode } = this.state;\n    return (\n      <View style={styles.container}>\n        <View style={styles.formWrapper}>\n          <View style={styles.formRow}>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Enter email address\"\n              placeholderTextColor=\"#333\"\n              value={email}\n              onChangeText={value => this.handleChange('email', value)}\n            />\n          </View>\n          <View style={styles.formRow}>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Enter password\"\n              placeholderTextColor=\"#333\"\n              secureTextEntry={true}\n              value={password}\n              onChangeText={value => this.handleChange('password', value)}\n            />\n          </View>\n          <View style={styles.formRow}>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Enter zipcode\"\n              placeholderTextColor=\"#333\"\n              value={zipcode}\n              onChangeText={value => this.handleChange('zipcode', value)}\n            />\n          </View>\n          <TouchableOpacity\n            style={styles.signupButton}\n            onPress={() => this.handleSignup()}\n          >\n            <Text style={styles.signupText}>Signup</Text>\n          </TouchableOpacity>\n          <Button\n            title=\"Already a user?\"\n            onPress={() => this.props.navigation.navigate('login')}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.user.error,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signupAuth: (email, password, zipcode) => {\n      dispatch(signupAuth(email, password, zipcode));\n    },\n  };\n};\n\nconst Signup = connect(mapStateToProps, mapDispatchToProps)(SignupScreen);\nexport default Signup;\n\n//Style\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  formWrapper: {\n    width: '80%',\n  },\n  formRow: {\n    marginBottom: 10,\n  },\n  textInput: {\n    backgroundColor: '#ddd',\n    height: 40,\n    paddingHorizontal: 10,\n    color: '#333',\n  },\n\n  signupButton: {\n    backgroundColor: 'blue',\n    paddingVertical: 10,\n  },\n  signupText: {\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}